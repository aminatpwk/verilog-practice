#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_0000019b4b8c7890 .scope module, "alutlb" "alutlb" 2 1;
 .timescale 0 0;
v0000019b4b937ad0_0 .var "A", 15 0;
v0000019b4b937e90_0 .var "ALU_Op", 2 0;
v0000019b4b9387f0_0 .var "B", 15 0;
v0000019b4b937f30_0 .net "Carry", 0 0, v0000019b4b8c7a20_0;  1 drivers
v0000019b4b937cb0_0 .net "Negative", 0 0, v0000019b4b8cccc0_0;  1 drivers
v0000019b4b9381b0_0 .net "Overflow", 0 0, v0000019b4b8ccd60_0;  1 drivers
v0000019b4b937990_0 .net "Result", 15 0, v0000019b4b8cce00_0;  1 drivers
v0000019b4b938070_0 .net "Zero", 0 0, v0000019b4b938430_0;  1 drivers
v0000019b4b937a30_0 .var "clk", 0 0;
v0000019b4b938110_0 .var "mode", 1 0;
S_0000019b4b8ccb30 .scope module, "uut" "alu" 2 11, 3 1 0, S_0000019b4b8c7890;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "A";
    .port_info 1 /INPUT 16 "B";
    .port_info 2 /INPUT 3 "ALU_Op";
    .port_info 3 /INPUT 2 "mode";
    .port_info 4 /INPUT 1 "clk";
    .port_info 5 /OUTPUT 16 "Result";
    .port_info 6 /OUTPUT 1 "Zero";
    .port_info 7 /OUTPUT 1 "Overflow";
    .port_info 8 /OUTPUT 1 "Negative";
    .port_info 9 /OUTPUT 1 "Carry";
L_0000019b4b8dc460 .functor NOT 16, v0000019b4b937ad0_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
L_0000019b4b8dc4d0 .functor NOT 16, v0000019b4b9387f0_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
v0000019b4b8a3210_0 .net "A", 15 0, v0000019b4b937ad0_0;  1 drivers
v0000019b4b81af40_0 .net "ALU_Op", 2 0, v0000019b4b937e90_0;  1 drivers
v0000019b4b81ad60_0 .net "B", 15 0, v0000019b4b9387f0_0;  1 drivers
v0000019b4b8c7a20_0 .var "Carry", 0 0;
v0000019b4b8cccc0_0 .var "Negative", 0 0;
v0000019b4b8ccd60_0 .var "Overflow", 0 0;
v0000019b4b8cce00_0 .var "Result", 15 0;
v0000019b4b938430_0 .var "Zero", 0 0;
v0000019b4b938610_0 .net *"_ivl_1", 0 0, L_0000019b4b938250;  1 drivers
v0000019b4b937df0_0 .net *"_ivl_2", 15 0, L_0000019b4b8dc460;  1 drivers
v0000019b4b9386b0_0 .net *"_ivl_7", 0 0, L_0000019b4b938390;  1 drivers
v0000019b4b938750_0 .net *"_ivl_8", 15 0, L_0000019b4b8dc4d0;  1 drivers
v0000019b4b937c10_0 .net "clk", 0 0, v0000019b4b937a30_0;  1 drivers
v0000019b4b937fd0_0 .net "mode", 1 0, v0000019b4b938110_0;  1 drivers
v0000019b4b9378f0_0 .net "nota", 15 0, L_0000019b4b9382f0;  1 drivers
v0000019b4b937d50_0 .net "notb", 15 0, L_0000019b4b937b70;  1 drivers
E_0000019b4b8c75c0 .event posedge, v0000019b4b937c10_0;
L_0000019b4b938250 .part v0000019b4b938110_0, 0, 1;
L_0000019b4b9382f0 .functor MUXZ 16, v0000019b4b937ad0_0, L_0000019b4b8dc460, L_0000019b4b938250, C4<>;
L_0000019b4b938390 .part v0000019b4b938110_0, 1, 1;
L_0000019b4b937b70 .functor MUXZ 16, v0000019b4b9387f0_0, L_0000019b4b8dc4d0, L_0000019b4b938390, C4<>;
    .scope S_0000019b4b8ccb30;
T_0 ;
    %wait E_0000019b4b8c75c0;
    %load/vec4 v0000019b4b81af40_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 3;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 3;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 3;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 3;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %pushi/vec4 65535, 65535, 16;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.0 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %add;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.1 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %sub;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.2 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %and;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.3 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %or;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.4 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %xor;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.5 ;
    %load/vec4 v0000019b4b9378f0_0;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.6 ;
    %load/vec4 v0000019b4b9378f0_0;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.7 ;
    %load/vec4 v0000019b4b9378f0_0;
    %load/vec4 v0000019b4b937d50_0;
    %cmp/u;
    %flag_mov 8, 5;
    %jmp/0 T_0.10, 8;
    %pushi/vec4 1, 0, 16;
    %jmp/1 T_0.11, 8;
T_0.10 ; End of true expr.
    %pushi/vec4 0, 0, 16;
    %jmp/0 T_0.11, 8;
 ; End of false expr.
    %blend;
T_0.11;
    %store/vec4 v0000019b4b8cce00_0, 0, 16;
    %jmp T_0.9;
T_0.9 ;
    %pop/vec4 1;
    %load/vec4 v0000019b4b8cce00_0;
    %cmpi/e 0, 0, 16;
    %flag_mov 8, 4;
    %jmp/0 T_0.12, 8;
    %pushi/vec4 1, 0, 2;
    %jmp/1 T_0.13, 8;
T_0.12 ; End of true expr.
    %pushi/vec4 0, 0, 2;
    %jmp/0 T_0.13, 8;
 ; End of false expr.
    %blend;
T_0.13;
    %pad/s 1;
    %store/vec4 v0000019b4b938430_0, 0, 1;
    %load/vec4 v0000019b4b8cce00_0;
    %parti/s 1, 15, 5;
    %store/vec4 v0000019b4b8cccc0_0, 0, 1;
    %load/vec4 v0000019b4b81af40_0;
    %pushi/vec4 0, 0, 3;
    %cmp/e;
    %flag_get/vec4 4;
    %load/vec4 v0000019b4b81af40_0;
    %pushi/vec4 1, 0, 3;
    %cmp/e;
    %flag_get/vec4 4;
    %or;
    %load/vec4 v0000019b4b9378f0_0;
    %parti/s 1, 15, 5;
    %load/vec4 v0000019b4b937d50_0;
    %parti/s 1, 15, 5;
    %cmp/e;
    %flag_get/vec4 4;
    %load/vec4 v0000019b4b8cce00_0;
    %parti/s 1, 15, 5;
    %load/vec4 v0000019b4b9378f0_0;
    %parti/s 1, 15, 5;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
    %and;
    %store/vec4 v0000019b4b8ccd60_0, 0, 1;
    %jmp T_0;
    .thread T_0;
    .scope S_0000019b4b8c7890;
T_1 ;
    %delay 5, 0;
    %load/vec4 v0000019b4b937a30_0;
    %inv;
    %store/vec4 v0000019b4b937a30_0, 0, 1;
    %jmp T_1;
    .thread T_1;
    .scope S_0000019b4b8c7890;
T_2 ;
    %vpi_call 2 31 "$dumpfile", "alu.vcd" {0 0 0};
    %vpi_call 2 32 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000019b4b8c7890 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000019b4b937a30_0, 0, 1;
    %pushi/vec4 1, 0, 16;
    %store/vec4 v0000019b4b937ad0_0, 0, 16;
    %pushi/vec4 2, 0, 16;
    %store/vec4 v0000019b4b9387f0_0, 0, 16;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000019b4b938110_0, 0, 2;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 40 "$display", "Test 1: ALU Operation = A + B" {0 0 0};
    %vpi_call 2 41 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 45 "$display", "Test 2: ALU Operation = A - B" {0 0 0};
    %vpi_call 2 46 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 50 "$display", "Test 3: ALU Operation = A & B" {0 0 0};
    %vpi_call 2 51 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 55 "$display", "Test 4: ALU Operation = A | B" {0 0 0};
    %vpi_call 2 56 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 60 "$display", "Test 5: ALU Operation = A XOR B" {0 0 0};
    %vpi_call 2 61 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 65 "$display", "Test 6: ALU Operation = A << 2" {0 0 0};
    %vpi_call 2 66 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 70 "$display", "Test 7: ALU Operation = A >> 2" {0 0 0};
    %vpi_call 2 71 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 75 "$display", "Test 8: ALU Operation = A < B" {0 0 0};
    %vpi_call 2 76 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %pushi/vec4 2, 0, 2;
    %store/vec4 v0000019b4b938110_0, 0, 2;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0000019b4b937e90_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 81 "$display", "Test 9: ALU Operation = ~A + B" {0 0 0};
    %vpi_call 2 82 "$display", "Result = %b, Zero = %b, Negative = %b, Overflow = %b, Carry = %b", v0000019b4b937990_0, v0000019b4b938070_0, v0000019b4b937cb0_0, v0000019b4b9381b0_0, v0000019b4b937f30_0 {0 0 0};
    %vpi_call 2 84 "$finish" {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "alutlb.v";
    "alu.v";
