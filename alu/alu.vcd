$date
	Fri Feb 07 23:02:00 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alutlb $end
$var wire 1 ! Zero $end
$var wire 16 " Result [15:0] $end
$var wire 1 # Overflow $end
$var wire 1 $ Negative $end
$var wire 1 % Carry $end
$var reg 16 & A [15:0] $end
$var reg 3 ' ALU_Op [2:0] $end
$var reg 16 ( B [15:0] $end
$var reg 1 ) clk $end
$var reg 2 * mode [1:0] $end
$scope module uut $end
$var wire 16 + A [15:0] $end
$var wire 3 , ALU_Op [2:0] $end
$var wire 16 - B [15:0] $end
$var wire 1 ) clk $end
$var wire 2 . mode [1:0] $end
$var wire 16 / notb [15:0] $end
$var wire 16 0 nota [15:0] $end
$var reg 1 % Carry $end
$var reg 1 $ Negative $end
$var reg 1 # Overflow $end
$var reg 16 1 Result [15:0] $end
$var reg 1 ! Zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
b1 0
b10 /
b0 .
b10 -
b0 ,
b1 +
b0 *
0)
b10 (
b0 '
b1 &
x%
x$
x#
bx "
x!
$end
#5
0#
0$
0!
b11 "
b11 1
1)
#10
0)
b1 '
b1 ,
#15
1#
1$
b1111111111111111 "
b1111111111111111 1
1)
#20
0)
b10 '
b10 ,
#25
0#
0$
1!
b0 "
b0 1
1)
#30
0)
b11 '
b11 ,
#35
0!
b11 "
b11 1
1)
#40
0)
b100 '
b100 ,
#45
1)
#50
0)
b101 '
b101 ,
#55
b100 "
b100 1
1)
#60
0)
b110 '
b110 ,
#65
1!
b0 "
b0 1
1)
#70
0)
b111 '
b111 ,
#75
0!
b1 "
b1 1
1)
#80
b1111111111111101 /
0)
b0 '
b0 ,
b10 *
b10 .
#85
1$
b1111111111111110 "
b1111111111111110 1
1)
#90
0)
